package com.brandslink.cloud.logistics.model;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.brandslink.cloud.logistics.entity.BaseEntity;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * 运输方式分区时效运费表
 * 实体类对应的数据表为：  t_method_zone_freight
 *
 * @author zhangjinglei
 * @date 2019-07-23 15:34:21
 */
@Data
@ApiModel(value = "MethodZoneFreightModel")
public class MethodZoneFreightModel extends BaseEntity implements Serializable {
    @ApiModelProperty(value = "分区顺序号")
    private Long id;

    @NotNull(message = "邮寄方式表主键不能为空")
    @ApiModelProperty(value = "关联邮寄方式表主键")
    private Long methodId;

    @Valid
    @ApiModelProperty(value = "物流方式分区国家数据集合")
    private List<MethodZoneCountryModel> zoneCountryList = new ArrayList<>();

    @NotBlank(message = "邮寄方式名称不能为空")
    @ApiModelProperty(value = "邮寄方式名称")
    private String logisticsMethodName;

    @NotBlank(message = "邮寄方式编码不能为空。。。")
    @ApiModelProperty(value = "邮寄方式编码")
    private String logisticsMethodCode;

    @ApiModelProperty(value = "不可发货物[{'code': '属性编码', 'name': '属性名称', 'type': '是否有效（1是2否）'}],JSONArray类型")
    private JSONArray unsupportCargo;

    @NotNull(message = "承诺到达天数不能为空")
    @ApiModelProperty(value = "承诺到达天数（单位天整型）{'max': 15, 'min': 1},JSONObject类型")
    private JSONObject promiseDays;

    @NotNull(message = "重量范围不能为空")
    @ApiModelProperty(value = "重量范围(单位g整型){'max': 5000, 'min': 1},JSONObject类型")
    private JSONObject weightRange;

    @ApiModelProperty(value = "长度限制（单位mm整型）{'high':1500,'length':1500,'threeLength':4500,'wide':1500},JSONObject类型")
    private JSONObject limitLength;

    @NotNull(message = "计抛否不能为空")
    @ApiModelProperty(value = "计抛否")
    private Byte isCountBulk;

    @ApiModelProperty(value = "计抛规则{'initWeight':'起重（g）整数','meterBehindWay':'计抛方式（1：默认，2：计半抛，3：免三分之一抛，4：超过实重的）','throwDepartment':'抛系整数','unilateralLong':'单边长（mm）整数','volumeWeightTimes':'材积与实重倍数1位小数'},JSONObject类型")
    private JSONObject countBulkRule;

    @NotNull(message = "计费方式（1：首重+续重，2：分段收费）不能为空")
    @ApiModelProperty(value = "计费方式（1：首重+续重，2：分段收费）")
    private Byte chargeMode;

    @ApiModelProperty(value = "首重+续重计费规则{'firstWeight': '首重（g）整数', 'renewWeight': '续重（g）整数', 'freightRebate': '运费折扣3位小数', 'handlingCharge': '处理费3位小数', 'firstWeightCharge': '首重收费（元）3位小数', 'freightRebateType': '运费折扣类型（0：无折扣，1：全部折扣，2：部分折扣）', 'renewWeightCharge': '续重收费（元）3位小数'},JSONObject类型")
    private JSONObject ruleFirstRenew;

    @ApiModelProperty(value = "分段计费规则[{'sectionNumber': '分段序号', 'beginWeight': '分段开始重量（g）', 'endWeight': '分段结束重量（g）', 'segmentFeeType': '分段计费类型（0：分段内按单位重量收费，1：分段内按首重+续重收费，2：分段内固定收费）', 'yuanPerGram': {'perGram': '每%克', 'yuan': '单位元'}, 'remoteFee': {'firstWeight': '首重(g)', 'renewWeight': '续重(g)', 'firstWeightFee': '首重收费（元）', 'renewWeightFee': '续重收费（元）'}, 'fixedCharge': '固定费用', 'freightRebate': '运费折扣', 'freightRebateType': '运费折扣类型（0：无折扣，1：全部折扣，2：部分折扣）', 'handlingCharge': '处理费'}],JSONArray类型")
    private JSONArray ruleSubsection;

    @DecimalMax(value = "100.000", message = "附加费率最高为100")
    @DecimalMin(value = "0.000", message = "附加费率最低0")
    @NotNull(message = "附加费率不能为空")
    @Digits(integer = 18, fraction = 3, message = "附加费率限制为3位整数3位小数，最大值为100.000，最小值为0.000")
    @ApiModelProperty(value = "附加费率")
    private BigDecimal afterCharge;

    @NotNull(message = "是否收取偏远费不能为空")
    @ApiModelProperty(value = "是否收取偏远费")
    private Byte isRemoteFee;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_logistics_method_freight
     *
     * @mbg.generated 2019-07-20 11:34:23
     */
    private static final long serialVersionUID = 1L;
}